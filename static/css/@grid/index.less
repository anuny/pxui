

// 构建容器
.make-container(){
	.container {
		margin-left: auto;
		margin-right: auto;
		padding-left: @grid-gutter / 2;
		padding-right: @grid-gutter / 2;
		width: @container-mid;
		max-width: 100%;
		&::after{
			content: "";
			display: table;
			clear: both;
		}
	}
	.container-full{
		width: auto !important;
	}
};
.make-container();


.row{
	margin-right:-10px;
	margin-left:-10px;
	&::before{
		display:table;
		content:""
	}
	&::after{
		display:table;
		clear:both;
		content:""
	}
}


.col{
	float:left;
	padding-right:10px;
	padding-left:10px
}

.col-1,.col-2,.col-3,.col-4,.col-5,.col-6,.col-7,.col-8,.col-9,.col-10,.col-11,.col-12{ float:left; }

// 构建列
.make-cols(@n, @i: 1) when (@i =< @n) {
  .col-@{i} {
    width: (@i * 100% / @n);
  }
  .make-cols(@n, (@i + 1));
};
.make-cols(@grid-cols);

.make-cols-m(@n, @i: 1) when (@i =< @n) {
  .col-m-@{i} {
    width: (@i * 100% / @n);
  }
  .make-cols-m(@n, (@i + 1));
};

.make-cols-offset(@n, @i: 1) when (@i =< @n) {
  .col-offset-@{i} {
    margin-left: (@i * 100% / @n);
  }
  .make-cols-offset(@n, (@i + 1));
};
.make-cols-offset(@grid-cols);


@media (max-width: @screen-min) {
	.container {
		width: @container-min;
	}
	.make-cols-m(@grid-cols);
}

@media (min-width: @screen-max) {
	.container {
		width: @container-max;
	}
}
